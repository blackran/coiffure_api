// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  lastName  String
  firstName String?
  email     String    @unique
  phone     String?
  password  String
  address   String?
  birthDate DateTime?
  isActif   Boolean?  @default(true)
  roleIDs   String[]  @db.ObjectId
  roles     Role[]    @relation(fields: [roleIDs], references: [id])
  entityIDs String[]  @db.ObjectId
  entities  Entity[]  @relation(fields: [entityIDs], references: [id])
  bookings   Booking[]
}

model Role {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  name          String       @unique
  usersIDs      String[]     @db.ObjectId
  users         User[]       @relation(fields: [usersIDs], references: [id])
  permissionIDs String[]     @db.ObjectId
  permissions   Permission[] @relation(fields: [permissionIDs], references: [id])
}

model Permission {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String   @unique
  roleIDs String[] @db.ObjectId
  roles   Role[]   @relation(fields: [roleIDs], references: [id])
}

model Entity {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  siret      String    @unique
  phone      String?
  email      String?
  userIDs    String[]  @db.ObjectId
  users      User[]    @relation(fields: [userIDs], references: [id])
  location   Location?
  openDayIDs String[]  @db.ObjectId
  openDays   OpenDay[] @relation(fields: [openDayIDs], references: [id])
}

type Location {
  address     String?
  type        Point   @default(Point)
  coordinates Float[]
}

enum Point {
  Point
}

model OpenDay {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  day       Day
  startHour DateTime  @default(now())
  endHour   DateTime
  entityIDs String[]  @db.ObjectId
  entities  Entity[]  @relation(fields: [entityIDs], references: [id])
  creneaus  Creneau[]

  @@unique([day, entityIDs])
}

enum Day {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

model Creneau {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  startHour DateTime
  endHour   DateTime
  openDayId String    @db.ObjectId
  openDay   OpenDay   @relation(fields: [openDayId], references: [id])
  bookings  Booking[]
}

model Booking {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  date      DateTime @default(now())
  creneauId String   @db.ObjectId
  userId    String   @db.ObjectId
  creneau   Creneau  @relation(fields: [creneauId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
